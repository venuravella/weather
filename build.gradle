plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.diffplug.spotless" version "5.14.3"
    id 'java'
    id 'idea'
}

group = 'com.pearson'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext{
    springBootVersion ="2.5.4"
    openApiVersion ="1.4.3"
    swagger2Version = "2.5.0"
    swaggerUiVersion = "2.5.0"
}

dependencies {
    //implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.5.4'

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-spring-webflux', version: '3.0.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-webflux-ui', version: '1.5.10'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //no-sql dynamodb
    implementation group: 'software.amazon.awssdk', name: 'dynamodb-enhanced', version: '2.13.5'

    //testing lib
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    //redis
    //implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '2.5.4'
    //implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.5.4'

}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
        endWithNewline()
    }
    java {
        removeUnusedImports()
        googleJavaFormat()
    }
}

test {
    useJUnitPlatform()
}
